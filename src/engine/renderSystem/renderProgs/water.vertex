attribute vec3 attr_Position;
attribute vec3 attr_Normal;

attribute vec4 attr_Color;
attribute vec2 attr_TexCoord0;

uniform mat4 u_ModelViewProjectionMatrix;
uniform float u_Time;
uniform vec2 u_Dimensions;
uniform mat4 u_ModelMatrix;

varying vec2 var_TexCoords;
varying float var_Time;
varying vec2 var_Dimensions;

void main()
{
	vec3 position  = attr_Position;
	vec3 normal = attr_Normal * 2.0 - vec3(1.0);

	vec2 tex = attr_TexCoord0.st;

	vec3 vGravity = ( vec4( -0.1,0,0,0 ) * u_ModelMatrix ).xyz;

	gl_Position = u_ModelViewProjectionMatrix * vec4(position, 1.0);

	float time = u_Time + 0.5;
	vec4 v = vec4( attr_Position, 1.0 );
	vec4 v2 = v;
#define waveHeight 3.0
#define waveWidth 0.6
	float baseHeight = sin( waveWidth * v2.x ) * cos( waveWidth * v2.y ) * waveHeight;
	v.z += baseHeight - ( sin( (waveWidth * v2.x ) + time ) * cos( ( waveWidth * v2.y ) + time ) * waveHeight );
	var_TexCoords = tex;
	var_Dimensions = u_Dimensions.st;
	var_Time = u_Time;
}